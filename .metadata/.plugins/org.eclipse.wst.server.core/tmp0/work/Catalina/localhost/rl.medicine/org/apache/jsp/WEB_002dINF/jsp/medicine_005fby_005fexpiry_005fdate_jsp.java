/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2020-04-16 10:51:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import rl.medicine.utility.AppLogger;
import rl.medicine.utility.AppUtility;
import rl.medicine.dao.AppDao;
import rl.medicine.model.DataIdModel;
import rl.medicine.dto.MedicineDetailDTO;
import rl.medicine.utility.AppConstant;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

public final class medicine_005fby_005fexpiry_005fdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Medicine By Name</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(".tab {position:absolute;left:150px; }\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tab2 {position:absolute;left:600px; }\r\n");
      out.write("\r\n");
      out.write(".tab3 {position:absolute;left:700px; }\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t \r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("<br/>\r\n");
      out.write("<h1><a href=\"home\"> Home </a></h1>\r\n");
      out.write("<br/>\r\n");
      out.write("\r\n");

final String JSP_TAG = "medicine_by_expiry_date JSP ";
	final List<DataIdModel> medicineList = (List<DataIdModel>) request.getAttribute(AppConstant.ATTRIBUTE_MEDICINE_LIST);
	//final List<DataIdModel> listBoxList = (List<DataIdModel>) request.getAttribute(AppConstant.ATTRIBUTE_MEDICINE_BOX_LIST);
	System.out.println(JSP_TAG+">> Medicine List : "+medicineList);
	//System.out.println(">> List Box List : "+listBoxList);
	String selectedMedicineName = (String)request.getAttribute(AppConstant.ATTRIBUTE_MEDICINE_SELECTED_NAME);
	if(selectedMedicineName == null ){
		selectedMedicineName = "";
	}
	
	final HashMap<Date, MedicineDetailDTO> byDateValueData = (HashMap<Date, MedicineDetailDTO>) request.getAttribute(AppConstant.ATTRIBUTE_MAP_MEDICINE_EXPIRY_LIST);
	
	System.out.println(" >> byBoxValueData "+byDateValueData);
	
	/* final List<String> medicineBoxNameList = new ArrayList<String>();
	if(listBoxList != null && !listBoxList.isEmpty()){
	for(DataIdModel model:listBoxList){
		medicineBoxNameList.add(model.getData());
	}
	}
	System.out.println("Medicine Box List : "+medicineBoxNameList);
	 */
	final List<String> medicineNameList = new ArrayList<String>(medicineList.size());
	for(DataIdModel model:medicineList){
		medicineNameList.add(model.getData());
	}
	System.out.println(" medicineNameList : "+medicineNameList);
	
      out.write("\r\n");
      out.write("<h2>\r\n");
      out.write("\t<form action=\"show_medicine_name_by_expiry_date\", method=\"post\">\r\n");
      out.write("\t<br/> Medicine Name : <select name = \"medicine_name_list\">\r\n");
      out.write("\t\t\t\t\t\t\t");
 for(int i=0; i<medicineNameList.size(); i++) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option>");
      out.print(medicineNameList.get(i) );
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</select><br/><br/>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value= \"Show Data\"/> \r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t</form> \t\t\t\t\t\t\r\n");
      out.write("</h2>\r\n");
      out.write("<br/> \r\n");
      out.write("<h3><font color = \"dark_red\"><b> ");
      out.print( selectedMedicineName);
      out.write("</b></font></h2>\r\n");

if(byDateValueData != null && !byDateValueData.isEmpty()){
	final Set<Date> allDates = byDateValueData.keySet();
	final List<Date> medicineExpiryDateList = new ArrayList<Date>(new TreeSet(allDates));

	for(int index = 0; index < medicineExpiryDateList.size(); index++){
	final Date listDate = medicineExpiryDateList.get(index);
	
	final SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MMMMM-yyyy");
	final String dateToShow = simpleDateFormat.format(listDate);
	
	final MedicineDetailDTO medicineData = byDateValueData.get(listDate);
	
	final String medicineBoxName = medicineData.getMedicineBox();
	final int totalStrips = medicineData.getTotalQuantity();
	final int totalLeftQuantity = medicineData.getLeftQuantity();
	final int totalQuantity = medicineData.getTotalQuantity();
	
	AppLogger.appDebug(JSP_TAG+" totalStrips : "+totalStrips+", totalLeftQuantity "+totalLeftQuantity+", totalQuantity "+totalQuantity);
	
	final String minimumExpiryDate = "";
	final String maximumExpiryDate = "";
	final String nextTillDate = "";
	
	
 
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("<br/>\r\n");
      out.write("<h3><font color = \"dark_orange\"><b> ");
      out.print( dateToShow);
      out.write("</b></font></h2>\t\r\n");
      out.write("<br/>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<table name = \"medicine_data\"  border=\"1\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th><font color=\"#EA8D3F\">Medicine Box </font></th>\r\n");
      out.write("\t\t\t\t<th><font color=\"#EA8D3F\">Total Strips </font></th>\r\n");
      out.write("\t\t\t\t<th><font color=\"#EA8D3F\">Left Quantity </font></th>\r\n");
      out.write("\t\t\t\t<th><font color=\"#EA8D3F\">Minimum Expiry Date </font></th>\r\n");
      out.write("\t\t\t\t<th><font color=\"#EA8D3F\">Maximum Expiry Date </font></th>\r\n");
      out.write("\t\t\t\t<th><font color=\"#EA8D3F\">Total Tablet counts </font></th>\r\n");
      out.write("\t\t\t\t<th><font color=\"#EA8D3F\">Next date as dose current from Today </font></th>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t<td><b><font color=\"blue\">");
      out.print( medicineBoxName);
      out.write("</font></b></td>\r\n");
      out.write("\t\t\t<td><b><font color=\"blue\">");
      out.print( totalStrips);
      out.write("</font></b></td>\r\n");
      out.write("\t\t\t<td><b><font color=\"blue\">");
      out.print( totalLeftQuantity);
      out.write("</font></b></td>\r\n");
      out.write("\t\t\t<td><b><font color=\"blue\">");
      out.print( minimumExpiryDate);
      out.write("</font></b></td>\r\n");
      out.write("\t\t\t<td><b><font color=\"blue\">");
      out.print( maximumExpiryDate);
      out.write("</font></b></td>\r\n");
      out.write("\t\t\t<td><b><font color=\"blue\">");
      out.print( totalQuantity );
      out.write("</font></b></td>\r\n");
      out.write("\t\t\t<td><b><font color=\"blue\">");
      out.print( nextTillDate);
      out.write("</font></b></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<br/>\r\n");
      out.write("\t\t");
}} 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
