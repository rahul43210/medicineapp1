/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2020-04-09 16:23:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import rl.medicine.utility.AppLogger;
import rl.medicine.utility.AppConstant;
import java.util.List;
import java.util.ArrayList;
import rl.medicine.model.DataIdModel;

public final class add_005fmedicine_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Add Medicine</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");

	final String TAG = "add_medicine.jsp ";
	final Object data =  request.getAttribute("attribute_medicine_list");
	final List<DataIdModel> medicineList = (List<DataIdModel>)data;
	final List<String> medicineNameList = new ArrayList<String>(medicineList.size());
	
	for(DataIdModel model:medicineList){
		medicineNameList.add(model.getData());
	} 
	
	
	AppLogger.appDebug(TAG+" medicineNameList "+medicineNameList);
	
	final List<DataIdModel> medicineBox = (List<DataIdModel>) request.getAttribute("attribute_medicine_box");
	final List<String> boxesNameList = new ArrayList<String>(medicineBox.size());
	
	for(DataIdModel model:medicineBox){
		boxesNameList.add(model.getData());
	} 
	AppLogger.appDebug(TAG+" boxesNameList "+boxesNameList);
	String messageResponse = (String) request.getAttribute(AppConstant.CRUD_RESULT_PAGE_MESSAGE);
	AppLogger.appDebug(TAG+" Message Response "+messageResponse);
	
	if(messageResponse == null){
		messageResponse = "";
	}else{
		messageResponse = "Op response : "+messageResponse;
	}
		 

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction save_medicine_detail(button) {\r\n");
      out.write("\t\tconsole.log(\" Save medicine detail function \");\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t$('.datepicker').datepicker({\r\n");
      out.write("    format: 'mm/yyyy'\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("<h2> <font color=\"red\"><b>");
      out.print(messageResponse);
      out.write("</b></font></h2><br/>\r\n");
      out.write("\r\n");
      out.write("<a href=\"home\"> Home </a>\r\n");
      out.write("<br/>\r\n");
      out.write("<br/>\r\n");
      out.write("\r\n");
      out.write("\t<h3>\r\n");
      out.write("\t\t<form action=\"save\" method=\"post\">\r\n");
      out.write("\t\t<br /> Medicine Names : <select name=\"parameter_medicine_name\"\r\n");
      out.write("\t\t\tid=\"parameter_medicine_name\">\r\n");
      out.write("\t\t ");
 for(int i=0; i<medicineNameList.size();i++) {
      out.write("\r\n");
      out.write("\t\t\t\t<option>");
      out.print(medicineNameList.get(i));
      out.write("</option>\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t</select> <br /> Expiry Date : <!-- <input class =\"datepicker\" type=\"date\" name=\"parameter_expiry_date\"\r\n");
      out.write("\t\t\tid=\"parameter_expiry_date\" /> -->\r\n");
      out.write("\t\t\t<input  type=\"month\" name=\"parameter_expiry_date\"\r\n");
      out.write("\t\t\tid=\"parameter_expiry_date\" />\r\n");
      out.write("\t\t\t<br/> Strip <input type=\"number\" name=\"parameter_strip\"/> \r\n");
      out.write("\t\t\t<br/> Left Quantity <input type=\"number\" name=\"parameter_quantity\"/>\r\n");
      out.write("\t\t\t<br /> Box Place : <select name=\"parameter_medicine_box\"\r\n");
      out.write("\t\t\tid=\"parameter_medicine_box\">\r\n");
      out.write("\t\t\t ");
 for(int i=0; i<boxesNameList.size();i++) {
      out.write("\r\n");
      out.write("\t\t\t\t<option>");
      out.print(boxesNameList.get(i));
      out.write("</option>\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</select> \r\n");
      out.write("\t\t\t<!-- onclick=\"save_medicine_detail(this)\" -->\r\n");
      out.write("\t\t\t<br /> <br /> <input type=\"submit\" name=\"save\"\r\n");
      out.write("\t\t\tid=\"save\" value=\"Save\"  />\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t</h3>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
